!<arch>
0-isupper.c/    0           0     0     644     240       `
#include "holberton.h"
/**
 * _isupper - check the code for Holberton School students.
 *
 * Return: Always 0 and 1.
 * @c: is a variable int.
 */
int _isupper(int c)
{
	if (c > 64 && c < 91)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
0-strcat.c/     0           0     0     644     603       `
#include "holberton.h"
/**
 * _strcat - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @dest: is a variable char*.
 * @src: is a variable char*.
 */
char *_strcat(char *dest, char *src)
{
	int len_src = _strlen(src);
	int len_dest = _strlen(dest);
	int i;

	for (i = 0; i <= (len_src + 1); i++)
	{
		dest[i + (len_dest + 1)] = src[i];
	}

	return (dest);
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}
	i--;

	return (i);
}

1-memcpy.c/     0           0     0     644     350       `
#include "holberton.h"
/**
 * _memcpy - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @dest: is a variable char*.
 * @src: is a variable char*.
 * @n: is a variable int unsigned.
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
unsigned int i;

for (i = 0; i < n; i++)
{
dest[i] = src[i];
}
return (dest);
}

100-atoi.c/     0           0     0     644     176       `
#include "holberton.h"
/**
 * _atoi - check the code for Holberton School students.
 *
 * Return: int.
 * @s: is a variable char pointer.
 */
int _atoi(char *s)
{
return (0);
}2-strlen.c/     0           0     0     644     233       `
#include "holberton.h"
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}

	return (i);
}

3-islower.c/    0           0     0     644     227       `
#include "holberton.h"
/**
* _islower - check the code for Holberton School students.
*
* Return: 0 and 1.
* @c: is a int assi.
*/
int _islower(int c)
{
	if (c >= 97 && c <= 122)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

3-strcmp.c/     0           0     0     644     706       `
#include "holberton.h"
/**
 * _strcmp - check the code for Holberton School students.
 *
 * Return: Always int.
 * @s1: is a variable char*.
 * @s2: is a variable char*.
 *
 */
int _strcmp(char *s1, char *s2)
{
	int len_s1 = _strlen(s1);
	int i, result;

	for (i = 0; i <= len_s1; i++)
	{
		if (s1[i] == '\0' || s2[i] == '\0')
		{
			break;
		}
		else if (s1[i] != s2[i])
		{
			result = s1[i] - s2[i];
			break;
		}
		else if (s1[i] == s2[i])
		{
			result = 0;
		}
	}
	return (result);
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}
	i--;

	return (i);
}
4-isalpha.c/    0           0     0     644     277       `
#include "holberton.h"
/**
* _isalpha - check the code for Holberton School students.
*
* Return: 0 and 1.
* @c: is a int assi.
*/
int _isalpha(int c)
{
	if (c >= 97 && c <= 122)
	{
		return (1);
	}
	else if (c >= 65 && c <= 90)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

5-strstr.c/     0           0     0     644     468       `
#include "holberton.h"
/**
 * _strstr - searches a string for any of a set of bytes.
 * @haystack: is a variable char*.
 * @needle: is a variable char*.
 * Return: always char*.
 */
char *_strstr(char *haystack, char *needle)
{
int i, j = 0;

for (i = 0; haystack[i] != '\0'; i++)
{
while (needle[j] && (haystack[i] == needle[0]))
{
if (haystack[i + j] == needle[j])
j++;
else
{
break;
}
}

if (needle[j])
{
j = 0;
}
else
{
return (haystack + i);
}
}
return ('\0');
}
9-strcpy.c/     0           0     0     644     529       `
#include "holberton.h"
/**
 * *_strcpy - check the code for Holberton School students.
 *
 * Return: viod.
 * @dest: is a variable point declared.
 * @src: is a variable point declared.
 */
char *_strcpy(char *dest, char *src)
{
	int y;

	for (y = 0; y <= _strlen(src); y++)
	{
		dest[y] = src[y];
	}
	return (dest);
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}

	return (i);
}

_putchar.c/     0           0     0     644     246       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}0-memset.c/     0           0     0     644     327       `
#include "holberton.h"
/**
 * _memset - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @s: is a variable char*.
 * @b: is a variable char.
 * @n: is a variable int unsigned.
 */
char *_memset(char *s, char b, unsigned int n)
{
unsigned int i;

for (i = 0; i < n; i++)
{
s[i] = b;
}
return (s);
}


1-isdigit.c/    0           0     0     644     240       `
#include "holberton.h"
/**
 * _isdigit - check the code for Holberton School students.
 *
 * Return: Always 0 and 1.
 * @c: is a variable int.
 */
int _isdigit(int c)
{
	if (c > 47 && c < 58)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
1-strncat.c/    0           0     0     644     685       `
#include "holberton.h"
/**
 * _strncat - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @dest: is a variable char*.
 * @src: is a variable char*.
 * @n: is a variable int.
 */
char *_strncat(char *dest, char *src, int n)
{
	int len_src = _strlen(src);
	int len_dest = _strlen(dest);
	int i;

	for (i = 0; i < n; i++)
	{
		if (i == (len_src + 1))
		{
			break;
		}
		else
		{
			dest[i + (len_dest + 1)] = src[i];
		}
	}

	return (dest);
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}
	i--;

	return (i);
}

2-strchr.c/     0           0     0     644     524       `
#include "holberton.h"
/**
 * _strchr - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @s: is a variable char*.
 * @c: is a variable char.
 */
char *_strchr(char *s, char c)
{
int i;
int len = _strlen(s);

for (i = 0; i <= len; i++)
{
if (s[i] == c)
{
return (&s[i]);
}
}
return ('\0');
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
int i;

for (i = 0; s[i] != '\0'; i++)
{
}

return (i);
}
2-strncpy.c/    0           0     0     644     646       `
#include "holberton.h"
/**
 * _strncpy - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @dest: is a variable char*.
 * @src: is a variable char*.
 * @n: is a variable int.
 */
char *_strncpy(char *dest, char *src, int n)
{
	int len_src = _strlen(src);
	int i;

	for (i = 0; i < n; i++)
	{
		if (i >= (len_src + 1))
		{
			dest[i] = '\0';
		}
		else
		{
			dest[i] = src[i];
		}
	}

	return (dest);
}
/**
 * _strlen - check the code for Holberton School students.
 *
 * Return: viod.
 * @s: is a variable point declared.
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{
	}
	i--;

	return (i);
}
3-puts.c/       0           0     0     644     259       `
#include "holberton.h"
/**
 * _puts - check the code for Holberton School students.
 *
 * Return: viod.
 * @str: is a variable point declared.
 */
void _puts(char *str)
{
	int i;

	for (i = 0; str[i] != '\0'; i++)
	{
		_putchar(str[i]);
	}
	_putchar('\n');
}

3-strspn.c/     0           0     0     644     418       `
#include "holberton.h"
/**
 * _strspn - check the code for Holberton School students.
 *
 * Return: Always char*.
 * @s: is a variable char*.
 * @accept: is a variable char*.
 */
unsigned int _strspn(char *s, char *accept)
{
unsigned int i, j, bool;

for (i = 0; s[i] != '\0'; i++)
{
bool = 1;
for (j = 0; accept[j] != '\0'; j++)
{
if (s[i] == accept[j])
{
bool = 0;
break;
}

}
if (bool == 1)
break;
}

return (i);
}
4-strpbrk.c/    0           0     0     644     371       `
#include "holberton.h"

/**
 * _strpbrk - searches a string for any of a set of bytes.
 * @s: first string.
 * @accept: second string.
 * Return: char or null.
 */
char *_strpbrk(char *s, char *accept)
{
unsigned int i, j;

for (i = 0; *(s + i) != '\0'; i++)
{
for (j = 0; *(accept + j) != '\0'; j++)
{
if (*(s + i) == *(accept + j))
return (s + i);
}
}
return ('\0');
}

6-abs.c/        0           0     0     644     289       `
#include "holberton.h"
/**
* _abs - check the code for Holberton School students.
*
* Return: 0 and 1.
*@num: is a variable int
*/
int _abs(int num)
{
	int positive = num * -1;

	if (num < 0)
	{
		return (positive);
	}
	else if (num >= 0)
	{
		return (num);
	}
	else
	{
		return (0);
	}
}

